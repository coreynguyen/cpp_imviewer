// generated by Fast Light User Interface Designer (fluid) version 1.0305

#ifndef window_h
#define window_h
#include <FL/Fl.H>
// >>>>>>>>>>>    Standard Libraries       <<<<<<<<<<<<
#include <vector>
// Windows OS Libraries
#include <windows.h>
#include <dwmapi.h> // need to link -ldwmapi
// >>>>>>>>>>>    3rd Party Libraries      <<<<<<<<<<<<
// To use FLTK add this to the linker: -lfltk -luuid -lcomctl32 -lgdi32
/**
 Needed to Load Icon
*/
#include <FL/x.H>
/**
 array of keypress names, needed for keyhandler
*/
#include <FL/names.h>
#include <FL/Fl_Native_File_Chooser.H>
/**
 Allows Images In Menu
*/
#include <FL/Fl_Multi_Label.H>
/**
 derivitive class of Fl_Text_Editor, to add key handling
*/
#include <FL/Fl_Text_Editor.H>
/**
 to share images between widgets?
*/
#include <FL/Fl_Shared_Image.H>
#include <FL/FL_BMP_Image.H>
#include <FL/FL_JPEG_Image.H>
#include <FL/FL_PNG_Image.H>
#include <FL/Fl_Light_Button.H>
#include <FL/FL_Scroll.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Group.H>
#include <FL/fl_ask.h>
#include <FL/Fl_RGB_Image.H>

#if !defined(FUCKSQL)
/**
 add to linker -lsqliteppext -lsqilte3pp -lsqlite3 -static-libgcc -static-libstdc++ -Wl,-Bstatic -lstdc++ -lpthread -Wl,-Bdynamic
*/
#include <sqlite3.h>
#endif
// >>>>>>>>>>>     Personal Libraries      <<<<<<<<<<<<
#include "filesystem.h"
#include "vectorext.h"
#include "stringext.h"
#include "stringenc.h"
#include "bytestream.h"
#include "resource.h"
#include "database.h"
/**
 include database.h, makes queries to the SQLite3 database
*/
extern database* settings;
// >>>>>>>>>>> INITIALIZING FUNCTIONS <<<<<<<<<<<<
void toggle_theme();
bool is_light_theme();
std::string md5(const char* &message, unsigned long len, unsigned long start_pos = 0);
bool isSelectionValid(bool checkDB = false);
void clear_image();
int load_tagfile(std::wstring file);
bool load_image();
bool read_image(std::string file);
// >>>>>>>>>>>   CUSTOM WIDGETS    <<<<<<<<<<<<

/**
 resizable box
 https://stackoverflow.com/a/43239188
*/
class Resizeable : public Fl_Box {
public:
  Resizeable(int X, int Y, int W, int H, const char*l=0) ;
private:
  bool can_resize;
  bool is_on_right_bottom_corner;
  signed int org[2];
  void draw();
  int handle(int event);
};

/**
 Input Handling
*/
class Fl_Text_EditorDC : public Fl_Text_Editor {
public:
  Fl_Text_EditorDC(int X,int Y,int W,int H,const char*l=0) ;
  int handle(int e);
};

/**
 Input Handling
*/
class Fl_ScrollDC : public Fl_Scroll {
public:
  Fl_ScrollDC(int x,int y,int w,int h) ;
  int handle(int e);
};

/**
 Input Handling
*/
class Fl_GroupDC : public Fl_Group {
public:
  Fl_GroupDC(int X,int Y,int W,int H,const char*l=0) ;
  int handle(int e);
};
int keyhandler(int event);
// >>>>>>>>>>>       CALL BACKS       <<<<<<<<<<<<
void btn_open_pressed();
// >>>>>>>>>>>     MAIN INTERFACE      <<<<<<<<<<<<
#include <FL/Fl_Double_Window.H>
extern Fl_Double_Window *win_main;
#include <FL/Fl_Tile.H>
extern Fl_Tile *tile_info;
extern Fl_GroupDC *tile_view;
extern Fl_GroupDC *shp_image;
#include <FL/Fl_Group.H>
extern Fl_Group *tile_edit;
extern Fl_Text_EditorDC *edt_sdtags;
extern Fl_ScrollDC *tag_sidebar;
#include <FL/Fl_Pack.H>
extern Fl_Pack *tag_sidebar_pack;
extern Fl_Group *lb_statusbar;
#include <FL/Fl_Output.H>
extern Fl_Output *lb_page;
extern Fl_Output *lb_file;
extern Fl_Output *lb_fsize;
extern Fl_Output *lb_info;
extern Fl_Output *lb_zoom;
extern Fl_Output *lb_loadtime;
#include <FL/Fl_Menu_Bar.H>
extern Fl_Menu_Bar *mnu_bar;
Fl_Double_Window* make_window();
extern Fl_Menu_Item menu_mnu_bar[];
#define itm_recents0 (menu_mnu_bar+3)
#define itm_recents1 (menu_mnu_bar+4)
#define itm_recents2 (menu_mnu_bar+5)
#define itm_recents3 (menu_mnu_bar+6)
#define itm_recents4 (menu_mnu_bar+7)
#define itm_recents5 (menu_mnu_bar+8)
#define itm_recents6 (menu_mnu_bar+9)
#define itm_recents7 (menu_mnu_bar+10)
#define itm_recents8 (menu_mnu_bar+11)
#define itm_recents9 (menu_mnu_bar+12)
#define mnu_autosavetxt (menu_mnu_bar+19)
#define mnu_showregions (menu_mnu_bar+22)
#define mnu_showeditor (menu_mnu_bar+23)
#define mnu_showtags (menu_mnu_bar+24)
#define chk_shrink (menu_mnu_bar+30)
#define chk_grow (menu_mnu_bar+31)
#define mnu_export_region (menu_mnu_bar+48)
#endif
